{"version":3,"sources":["imageCard.js","imageSearchForm.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCard","img","photo","webformatURL","user","downloads","_img$img$tags$split","tags","split","_img$img$tags$split2","_slicedToArray","t1","t2","t3","_useState","useState","_useState2","modal","setModal","toggleModal","document","body","classList","add","remove","React","createElement","className","style","width","Fragment","onClick","src","alt","imageSearchForm","_ref","imageSearchHook","query","setQuery","onSubmit","e","preventDefault","htmlFor","type","name","placeholder","value","onChange","target","App","setImg","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","useEffect","url","concat","fetch","then","response","json","result","hits","error","ImageSearchForm","text","length","map","data","key","id","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6356f29f.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\n\nexport default function ImageCard(img) {\n  const photo = img.img.webformatURL;\n  const user = img.img.user;\n  const downloads = img.img.downloads;\n  const [t1, t2, t3] = img.img.tags.split(',');\n  const [modal, setModal] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n\n  if(modal) {\n    document.body.classList.add('active-modal')\n  } else {\n    document.body.classList.remove('active-modal')\n  }\n\n\n  return (\n    <div>\n      <div className=\"col-lg-2\">\n        <div  className=\"card\" style={{ width: '25rem' }}>\n        \n          <>\n      <button onClick={toggleModal} className=\"btn-modal\">\n      <img src={photo} className=\"card-img-top\" alt=\"data\" />\n      </button>\n\n      {modal && (\n        <div className=\"modal\">\n          <div onClick={toggleModal} className=\"overlay\"></div>\n          <div className=\"modal-content\">\n            \n          <div className=\"card-body\">\n            \n            <img src={photo} className=\"card-img-top\" alt=\"data\" />\n            <p className=\"card-text\">User : {user}</p>\n            <p className=\"card-text\">Downloads : {downloads}</p>\n            <span className=\"badge bg-secondary\">{t1}</span> &nbsp;\n            <span className=\"badge bg-secondary\">{t2}</span> &nbsp;\n            <span className=\"badge bg-secondary\">{t3}</span> \n           \n          \n          </div> \n            <button className=\"close-modal\" onClick={toggleModal}>\n              X\n            </button>\n          </div>\n        </div>\n      )}\n       \n    </>\n          </div>\n        \n      </div>\n    </div>\n  );\n}","import React, {useState} from \"react\";\n\n//create hook for useState\nexport default function imageSearchForm({imageSearchHook}) {\n  const [query, setQuery] = useState(\"\");\n  //console.log(query);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    imageSearchHook(query);\n  };\n\n  \n  return (\n    <>\n    <form className=\"form\" onSubmit={onSubmit}> \n        <label className=\"label\" htmlFor=\"query\"> \n        </label>\n        <input\n          type=\"text\"\n          name=\"query\"\n          className=\"input\"\n          placeholder={'Search images here...'}\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button type=\"submit\"\n\n        className=\"button\" >\n          Search\n        </button>\n      </form>\n\n    </>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport ImageCard from './imageCard';\nimport ImageSearchForm from \"./imageSearchForm\";\n\n\n\n\nexport default function App() {\n  const [img, setImg] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n\n\n  useEffect(() => {\n    const key = '33859996-d57edfbba88808139a59556d2';\n    const url = `https://pixabay.com/api/?key=${key}&q=${query}&per_page=15`;    \n    //console.log(url)\n    fetch(url)\n      .then((response) => response.json())\n      .then(\n        (result) => {\n          //console.log(result)\n          setImg(result.hits);\n          setIsLoading(false);\n        },\n        (error) => {\n          // setError(error);\n\n        }\n      );\n  }, [query]);\n\n  return (\n   \n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"title\">Pixabay Image Search App</h1>\n        <ImageSearchForm  imageSearchHook={(text) => setQuery(text)}/>\n        {!isLoading && img.length === 0 &&  (\n          <h1 className=\"text-center\">Not Found</h1>\n        )}\n        {isLoading ? (\n        <h1 className=\"text-center\"> Loading</h1>\n      ) : (\n          <div className=\"container\">\n            <div className=\"card-list\">\n            \n          \n            \n             {img.map((data) => (\n                <ImageCard key={data.id} img={data} />\n                \n              ))}\n               \n                     \n            </div>\n          </div>\n          )}\n     </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}